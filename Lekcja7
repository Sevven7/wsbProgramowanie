using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Lekcja2506
{
    // ZADANIE 1
    /*
    public enum DniTygodnia
    {
        Poniedziałek,
        Wtorek,
        Środa,
        Czwartek,
        Piątek,
        Sobota,
        Niedziela
    }
    public enum EtapyPrania
    {
        Wypełnianie,
        Pranie,
        Płukanie,
        Wirowanie,
        Suszenie
    }
    public enum Posiłki
    {
        Śniadanie,
        DrugieŚniadanie,
        Obiad,
        Podwieczorek,
        Kolacja
    }
    public enum BierkiSzachowe
    {
        Król = 0,
        King = Król,
        Hetman,
        Queen = Hetman,
        Wieża,
        Rook = Wieża,
        Goniec,
        Bishop = Goniec,
        Skoczek,
        Knight = Skoczek,
        Pion,
        Pawn = Pion
    }

    // ZADANIE 2
    public struct Student
    {
        public string Imie;
        public string Nazwisko;
        public int NumerIndeksu;
        public string Kierunek;
    }
    public struct Przedmiot
    {
        public string Nazwa;
        public string KodPrzedmiotu;
        public int LiczbaGodzin;
        public string Prowadzacy;
    }
    public struct NauczycielAkademicki
    {
        public string Imie;
        public string Nazwisko;
        public string StopienNaukowy;
        public string Specjalizacja;
    }
    */
    // ZADANIE 3
    /*
    public enum KlasaRzadkosci
    {
        Powszechny,
        Rzadki,
        Unikalny,
        Epicki
    }

    public enum TypPrzedmiotu
    {
        Broń,
        Zbroja,
        Amulet,
        Pierścień,
        Hełm,
        Tarcza,
        Buty
    }

    public struct Przedmiot
    {
        public float Waga;
        public int Wartosc;
        public KlasaRzadkosci Rzadkosc;
        public TypPrzedmiotu Typ;
        public string NazwaWlasna;

        public void WypelnijPrzedmiot(float waga, int wartosc, KlasaRzadkosci rzadkosc, TypPrzedmiotu typ, string nazwaWlasna)
        {
            Waga = waga;
            Wartosc = wartosc;
            Rzadkosc = rzadkosc;
            Typ = typ;
            NazwaWlasna = nazwaWlasna;
        }

        public void WyswietlInformacje()
        {
            Console.WriteLine($"Nazwa: {NazwaWlasna}");
            Console.WriteLine($"Typ: {Typ}");
            Console.WriteLine($"Rzadkosc: {Rzadkosc}");
            Console.WriteLine($"Waga: {Waga}");
            Console.WriteLine($"Wartosc: {Wartosc} szt.");
            Console.WriteLine();
        }
    }

    public class Program
    {
        public static void Main(string[] args)
        {
            Przedmiot[] przedmioty = new Przedmiot[3];

            // Wypełnienie struktury przykładowymi przedmiotami
            przedmioty[0].WypelnijPrzedmiot(2.5f, 10, KlasaRzadkosci.Powszechny, TypPrzedmiotu.Broń, "Miecz");
            przedmioty[1].WypelnijPrzedmiot(1.2f, 25, KlasaRzadkosci.Rzadki, TypPrzedmiotu.Zbroja, "Zbroja Płytowa");
            przedmioty[2].WypelnijPrzedmiot(0.5f, 50, KlasaRzadkosci.Epicki, TypPrzedmiotu.Amulet, "Amulet Mocy");

            // Wyświetlanie informacji o przedmiotach
            foreach (Przedmiot przedmiot in przedmioty)
            {
                przedmiot.WyswietlInformacje();
            }

            // Losowanie przedmiotu
            Przedmiot losowyPrzedmiot = LosujPrzedmiot(przedmioty);
            Console.WriteLine("Wylosowany przedmiot:");
            losowyPrzedmiot.WyswietlInformacje();
        }

        public static Przedmiot LosujPrzedmiot(Przedmiot[] przedmioty)
        {
            // Obliczanie sumy szans dla poszczególnych klas rzadkości
            int[] szanse = new int[przedmioty.Length];
            int sumaSztuk = 0;
            for (int i = 0; i < przedmioty.Length; i++)
            {
                int szansa = (int)przedmioty[i].Rzadkosc + 1;
                szanse[i] = szansa;
                sumaSztuk += szansa;
            }

            // Losowanie przedmiotu na podstawie szans
            int losowaLiczba = new Random().Next(sumaSztuk);
            int indeks = 0;
            while (losowaLiczba >= szanse[indeks])
            {
                losowaLiczba -= szanse[indeks];
                indeks++;
            }

            return przedmioty[indeks];
        }
    }
    */
    // ZADANIE 4
    public enum Plec
    {
        Mezczyzna,
        Kobieta
    }

    public struct Student
    {
        public string Nazwisko;
        public int NrAlbumu;
        public float Ocena;
        public Plec Plec;

        public void WypelnijStudenta(string nazwisko, int nrAlbumu, float ocena, Plec plec)
        {
            Nazwisko = nazwisko;
            NrAlbumu = nrAlbumu;
            Ocena = Math.Max(2.0f, Math.Min(5.0f, ocena)); // Ograniczenie oceny do przedziału 2.0 - 5.0
            Plec = plec;
        }

        public void WyswietlInformacje()
        {
            Console.WriteLine($"Nazwisko: {Nazwisko}, Nr albumu: {NrAlbumu}, Ocena: {Ocena}, Płeć: {Plec}");
        }
    }

    public class Program
    {
        public static void Main(string[] args)
        {
            Student[] grupa = new Student[5];

            // Wypełnienie informacji o studentach
            grupa[0].WypelnijStudenta("Kowalski", 12345, 4.5f, Plec.Mezczyzna);
            grupa[1].WypelnijStudenta("Nowak", 23456, 3.8f, Plec.Kobieta);
            grupa[2].WypelnijStudenta("Wiśniewski", 34567, 5.5f, Plec.Mezczyzna); // Ocena zostanie ograniczona do 5.0
            grupa[3].WypelnijStudenta("Jankowska", 45678, 1.5f, Plec.Kobieta); // Ocena zostanie ograniczona do 2.0
            grupa[4].WypelnijStudenta("Kwiatkowski", 56789, 3.9f, Plec.Mezczyzna);

            // Wyświetlenie informacji o studentach
            foreach (Student student in grupa)
            {
                student.WyswietlInformacje();
            }

            // Obliczenie średniej ocen w grupie
            float sredniaOcen = ObliczSredniaOcen(grupa);
            Console.WriteLine($"Średnia ocen: {sredniaOcen}");
        }

        public static float ObliczSredniaOcen(Student[] grupa)
        {
            if (grupa.Length == 0)
                return 0;

            float sumaOcen = 0;
            foreach (Student student in grupa)
            {
                sumaOcen += student.Ocena;
            }

            return sumaOcen / grupa.Length;
        }
    }

}
